# プルリクエスト用のプレビューデプロイメント
name: PR Preview

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read
  pages: write
  deployments: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    environment:
      name: preview-pr-${{ github.event.number }}
      url: https://kjun1.github.io/task-management/
    env:
      HUGO_VERSION: 0.150.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Build PR Preview
        env:
          HUGO_ENVIRONMENT: preview
          HUGO_ENV: preview
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://kjun1.github.io/task-management/"

      - name: Upload Preview Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-site-pr-${{ github.event.number }}
          path: public/
          retention-days: 30

      - name: Deploy to Preview Branch (for manual testing)
        run: |
          # Configure git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create preview branch name
          PREVIEW_BRANCH="preview-pr-${{ github.event.number }}"
          
          # Check if preview branch exists and delete it
          git fetch origin || true
          if git ls-remote --exit-code --heads origin $PREVIEW_BRANCH; then
            git push origin --delete $PREVIEW_BRANCH || true
          fi
          
          # Create new orphan branch for preview
          git checkout --orphan $PREVIEW_BRANCH
          git rm -rf .
          
          # Copy built site to root
          cp -r public/* .
          cp public/.* . 2>/dev/null || true
          
          # Create .nojekyll to ensure GitHub Pages works correctly
          touch .nojekyll
          
          # Add README with instructions
          cat > README.md << 'EOF'
          # Preview for PR #${{ github.event.number }}
          
          This branch contains the built site for PR #${{ github.event.number }}.
          
          To view this preview:
          1. Go to Repository Settings → Pages
          2. Change source to "Deploy from a branch"
          3. Select this branch: `preview-pr-${{ github.event.number }}`
          4. Select "/ (root)" as the folder
          5. Save the settings
          
          The preview will be available at: https://kjun1.github.io/task-management/
          EOF
          
          # Add all files and commit
          git add .
          git commit -m "Deploy preview for PR #${{ github.event.number }}"
          
          # Push to preview branch
          git push origin $PREVIEW_BRANCH

      - name: Comment PR
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const prNumber = context.issue.number;
            const branchUrl = `https://github.com/kjun1/task-management/tree/preview-pr-${prNumber}`;
            const artifactUrl = `https://github.com/kjun1/task-management/actions/runs/${context.runId}`;
            const body = `🔍 **Preview Build Complete**
            
            - 📊 Build artifacts generated
            - 📦 **Download Preview**: [Artifacts](${artifactUrl}) (preview-site-pr-${prNumber})
            - 🌿 **Preview Branch**: [preview-pr-${prNumber}](${branchUrl})
            - 📈 Build size: ${fs.statSync('./public').size} bytes (approx)
            
            ## プレビューを確認する方法:
            
            ### 方法1: Artifactをダウンロード
            1. 上の "Artifacts" リンクをクリック
            2. \`preview-site-pr-${prNumber}\` をダウンロード
            3. 展開してローカルでサーブ (\`python -m http.server\` など)
            
            ### 方法2: GitHub Pagesで確認 (手動設定)
            1. [Repository Settings → Pages](https://github.com/kjun1/task-management/settings/pages)
            2. Source を "Deploy from a branch" に変更
            3. Branch を \`preview-pr-${prNumber}\` に設定
            4. Save後、https://kjun1.github.io/task-management/ でアクセス
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });